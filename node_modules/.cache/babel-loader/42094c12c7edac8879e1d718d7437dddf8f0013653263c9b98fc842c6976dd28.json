{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\\\u0418\\u0431\\u0440\\u043E\\\\Desktop\\\\New folder\\\\YouTubeFront\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [url, setUrl] = useState('');\n  const [summary, setSummary] = useState('');\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState('');\n  const [language, setLanguage] = useState('en');\n  const handleSubmit = async e => {\n    e.preventDefault();\n    setIsLoading(true);\n    setError('');\n    setSummary('');\n    try {\n      const apiUrl = process.env.NODE_ENV === 'development' ? 'http://localhost:5000/summarize' : 'https://youtube-summarize-1.onrender.com/summarize';\n      await fetch('https://youtube-summarize-1.onrender.com/summarize', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          url,\n          language\n        })\n      });\n      if (!response.ok) {\n        const errorData = await response.json();\n        if (errorData.type === 'NO_SUBTITLES') {\n          throw new Error(errorData.error[language] || 'Subtitles disabled');\n        } else if (errorData.type === 'LANGUAGE_NOT_AVAILABLE') {\n          var _errorData$available_;\n          throw new Error(`${errorData.error[language]}. ${language === 'ru' ? 'Доступные языки:' : 'Available languages:'} \n            ${((_errorData$available_ = errorData.available_languages) === null || _errorData$available_ === void 0 ? void 0 : _errorData$available_.join(', ')) || 'none'}`);\n        } else {\n          var _errorData$error;\n          throw new Error(((_errorData$error = errorData.error) === null || _errorData$error === void 0 ? void 0 : _errorData$error[language]) || 'Unknown error');\n        }\n      }\n      const data = await response.json();\n      setSummary(data.summary);\n    } catch (err) {\n      setError(err.message);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n  const translations = {\n    en: {\n      title: \"YouTube Video Summarizer\",\n      description: \"Get concise summaries of YouTube videos\",\n      placeholder: \"Enter YouTube URL...\",\n      button: \"Get Summary\",\n      loading: \"Processing...\",\n      errorDefault: \"Failed to connect to server\",\n      summaryTitle: \"Video Summary\"\n    },\n    ru: {\n      title: \"Суммаризатор YouTube видео\",\n      description: \"Получайте краткие конспекты YouTube видео\",\n      placeholder: \"Введите URL YouTube...\",\n      button: \"Получить конспект\",\n      loading: \"Обработка...\",\n      errorDefault: \"Ошибка соединения с сервером\",\n      summaryTitle: \"Конспект видео\"\n    }\n  };\n  const t = translations[language];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: t.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: t.description\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      className: \"main-content\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"language-switcher\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setLanguage('en'),\n          className: language === 'en' ? 'active' : '',\n          children: \"English\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setLanguage('ru'),\n          className: language === 'ru' ? 'active' : '',\n          children: \"\\u0420\\u0443\\u0441\\u0441\\u043A\\u0438\\u0439\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        className: \"url-form\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: url,\n          onChange: e => setUrl(e.target.value),\n          placeholder: t.placeholder,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          disabled: isLoading,\n          children: isLoading ? t.loading : t.button\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 9\n      }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"error-message\",\n        children: [error, (error.includes('Доступные языки') || error.includes('Available languages')) && /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setLanguage(language === 'ru' ? 'en' : 'ru'),\n          className: \"try-another-language\",\n          children: language === 'ru' ? 'Попробовать английский' : 'Try Russian'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 11\n      }, this), summary && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"summary-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: t.summaryTitle\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"summary-content\",\n          children: summary.split('\\n').map((paragraph, index) => /*#__PURE__*/_jsxDEV(\"p\", {\n            children: paragraph.startsWith('#') ? /*#__PURE__*/_jsxDEV(\"strong\", {\n              children: paragraph.replace(/^#+\\s*/, '')\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 139,\n              columnNumber: 21\n            }, this) : paragraph\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 137,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"footer\", {\n      className: \"footer\",\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"\\xA9 \", new Date().getFullYear(), \" YouTube Summary App\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 83,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"5BcvYLTh2j9UU3bbX6nzPQ5ltsg=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","App","_s","url","setUrl","summary","setSummary","isLoading","setIsLoading","error","setError","language","setLanguage","handleSubmit","e","preventDefault","apiUrl","process","env","NODE_ENV","fetch","method","headers","body","JSON","stringify","response","ok","errorData","json","type","Error","_errorData$available_","available_languages","join","_errorData$error","data","err","message","translations","en","title","description","placeholder","button","loading","errorDefault","summaryTitle","ru","t","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","onSubmit","value","onChange","target","required","disabled","includes","split","map","paragraph","index","startsWith","replace","Date","getFullYear","_c","$RefreshReg$"],"sources":["C:/Users/Ибро/Desktop/New folder/YouTubeFront/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport './App.css';\r\n\r\nfunction App() {\r\n  const [url, setUrl] = useState('');\r\n  const [summary, setSummary] = useState('');\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [error, setError] = useState('');\r\n  const [language, setLanguage] = useState('en');\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    setIsLoading(true);\r\n    setError('');\r\n    setSummary('');\r\n    \r\n    try {\r\n      const apiUrl = process.env.NODE_ENV === 'development' \r\n  ? 'http://localhost:5000/summarize' \r\n  : 'https://youtube-summarize-1.onrender.com/summarize';\r\n\r\n\r\n      await fetch('https://youtube-summarize-1.onrender.com/summarize', {\r\n  method: 'POST',\r\n  headers: {\r\n    'Content-Type': 'application/json',\r\n  },\r\n  body: JSON.stringify({ url, language }),\r\n});\r\n      \r\n      if (!response.ok) {\r\n        const errorData = await response.json();\r\n        \r\n        if (errorData.type === 'NO_SUBTITLES') {\r\n          throw new Error(errorData.error[language] || 'Subtitles disabled');\r\n        }\r\n        else if (errorData.type === 'LANGUAGE_NOT_AVAILABLE') {\r\n          throw new Error(\r\n            `${errorData.error[language]}. ${language === 'ru' ? 'Доступные языки:' : 'Available languages:'} \r\n            ${errorData.available_languages?.join(', ') || 'none'}`\r\n          );\r\n        }\r\n        else {\r\n          throw new Error(errorData.error?.[language] || 'Unknown error');\r\n        }\r\n      }\r\n      \r\n      const data = await response.json();\r\n      setSummary(data.summary);\r\n      \r\n    } catch (err) {\r\n      setError(err.message);\r\n      \r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n\r\n  const translations = {\r\n    en: {\r\n      title: \"YouTube Video Summarizer\",\r\n      description: \"Get concise summaries of YouTube videos\",\r\n      placeholder: \"Enter YouTube URL...\",\r\n      button: \"Get Summary\",\r\n      loading: \"Processing...\",\r\n      errorDefault: \"Failed to connect to server\",\r\n      summaryTitle: \"Video Summary\"\r\n    },\r\n    ru: {\r\n      title: \"Суммаризатор YouTube видео\",\r\n      description: \"Получайте краткие конспекты YouTube видео\",\r\n      placeholder: \"Введите URL YouTube...\",\r\n      button: \"Получить конспект\",\r\n      loading: \"Обработка...\",\r\n      errorDefault: \"Ошибка соединения с сервером\",\r\n      summaryTitle: \"Конспект видео\"\r\n    }\r\n  };\r\n\r\n  const t = translations[language];\r\n\r\n  return (\r\n    <div className=\"app\">\r\n      <header className=\"header\">\r\n        <h1>{t.title}</h1>\r\n        <p>{t.description}</p>\r\n      </header>\r\n      \r\n      <main className=\"main-content\">\r\n        <div className=\"language-switcher\">\r\n          <button \r\n            onClick={() => setLanguage('en')} \r\n            className={language === 'en' ? 'active' : ''}\r\n          >\r\n            English\r\n          </button>\r\n          <button \r\n            onClick={() => setLanguage('ru')} \r\n            className={language === 'ru' ? 'active' : ''}\r\n          >\r\n            Русский\r\n          </button>\r\n        </div>\r\n\r\n        <form onSubmit={handleSubmit} className=\"url-form\">\r\n          <input\r\n            type=\"text\"\r\n            value={url}\r\n            onChange={(e) => setUrl(e.target.value)}\r\n            placeholder={t.placeholder}\r\n            required\r\n          />\r\n          <button type=\"submit\" disabled={isLoading}>\r\n            {isLoading ? t.loading : t.button}\r\n          </button>\r\n        </form>\r\n        \r\n        {error && (\r\n          <div className=\"error-message\">\r\n            {error}\r\n            {(error.includes('Доступные языки') || error.includes('Available languages')) && (\r\n              <button \r\n                onClick={() => setLanguage(language === 'ru' ? 'en' : 'ru')}\r\n                className=\"try-another-language\"\r\n              >\r\n                {language === 'ru' ? 'Попробовать английский' : 'Try Russian'}\r\n              </button>\r\n            )}\r\n          </div>\r\n        )}\r\n        \r\n        {summary && (\r\n          <div className=\"summary-container\">\r\n            <h2>{t.summaryTitle}</h2>\r\n            <div className=\"summary-content\">\r\n              {summary.split('\\n').map((paragraph, index) => (\r\n                <p key={index}>\r\n                  {paragraph.startsWith('#') ? (\r\n                    <strong>{paragraph.replace(/^#+\\s*/, '')}</strong>\r\n                  ) : (\r\n                    paragraph\r\n                  )}\r\n                </p>\r\n              ))}\r\n            </div>\r\n          </div>\r\n        )}\r\n      </main>\r\n      \r\n      <footer className=\"footer\">\r\n        <p>© {new Date().getFullYear()} YouTube Summary App</p>\r\n      </footer>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}